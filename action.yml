name: "@thzero/Library Build CI"
description: Action to run @thzero/Library Build CI
inputs:
  type:
    description: 'Build type'
    default: 'npm'
  label:
    description: 'Git Label'

runs:
  using: "composite"
  steps:
  - name: Event Input
    run: |
      echo action: ${{ inputs.type }}
      echo label: ${{ inputs.label }}
  - uses: actions/checkout@v2
    with:
      ref: dev
  - name: Initialize Node.js ${{ matrix.node-version }}
    uses: actions/setup-node@v2
    with:
      node-version: '14'
      registry-url: 'https://registry.npmjs.org'
  - name: Package Output
    run: |
      cat package.json
  # - name: NCU Upgrade Check
  #   if: inputs.type == 'npm'
  #   id: ncu-upgrade
  #   uses: thzero/ncu-upgrade@v0.13-beta
  # - name: NCU Updated Check Output
  #   if: inputs.type == 'npm'
  #   run: |
  #     echo upgraded: ${{ steps.ncu-upgrade.outputs.upgraded }}
  #     echo npm_and_upgrade? ${{ (inputs.type == 'npm' && steps.ncu-upgrade.outputs.upgraded) }}
  # - name: Output
  #   run: |
  #     echo upgraded: ${{ steps.ncu-upgrade.outputs.upgraded }}
  #     echo action: ${{ inputs.type }}
  #     echo action_is_npm? ${{ (inputs.type == 'npm') }}
  #     echo npm_and_upgrade? ${{ (inputs.type == 'npm' && steps.ncu-upgrade.outputs.upgraded == true) }}
  #     echo action_is_version? ${{ (inputs.type == 'version') }}
  #     echo upgrade? ${{ ((inputs.type == 'npm' && steps.ncu-upgrade.outputs.upgraded == true) || inputs.type == 'version') }}
  # - name: Node Dependencies
  #   if: ((inputs.type == 'npm' && steps.ncu-upgrade.outputs.upgraded == true) || inputs.type == 'version')
  #   run: |
  #     npm install --no-package-lock
  # - name: Update Package Version
  #   if: ((inputs.type == 'npm' && steps.ncu-upgrade.outputs.upgraded == true) || inputs.type == 'version')
  #   run: |
  #     npm run cli-update -- --silent
  # - name: Git Check
  #   id: git-changes
  #   if: success()
  #   uses: UnicornGlobal/has-changes-action@v1.0.11
  # - name: Git Check Output
  #   run: |
  #     echo changed? ${{ steps.git-changes.outputs.changed }}
  #     echo npm commit? ${{ inputs.type == 'npm' && steps.git-changes.outputs.changed == 1 }}
  #     echo !npm commit? ${{ inputs.type != 'npm' && steps.git-changes.outputs.changed == 1 && inputs.label != '' }}
  # - name: Git Commit NPM
  #   if: inputs.type == 'npm' && steps.git-changes.outputs.changed == 1
  #   run: |
  #     git config --global user.name '${{ github.repository_owner }}'
  #     git config --global user.email '${{ github.repository_owner }}@users.noreply.github.com'
  #     git add .
  #     git commit -m "npm updates"
  #     git push
  # - name: Git Commit Version
  #   if: inputs.type == 'version' && steps.git-changes.outputs.changed == 1 && inputs.label != ''
  #   run: |
  #     git config --global user.name '${{ github.repository_owner }}'
  #     git config --global user.email '${{ github.repository_owner }}@users.noreply.github.com'
  #     git add .
  #     git commit -m "version updates"
  #     git push
  # - name: Requires Pull Request?
  #   run: |
  #     echo changed? ${{ steps.git-changes.outputs.changed }}
  # - name: Pull Request
  #   id: pull-request
  #   if: steps.git-changes.outputs.changed == 1 && success()
  #   uses: repo-sync/pull-request@v2
  #   with:
  #     source_branch: dev
  #     destination_branch: master
  #     github_token: ${{ secrets.GITHUB_TOKEN }}
  # - name: Pull Request Output
  #   if: steps.git-changes.outputs.changed == 1 && success()
  #   run: |
  #     echo ${{ steps.pull-request.outputs.pr_url }}
  #     echo ${{ steps.pull-request.outputs.pr_number }}
  # - name: Merge pull request
  #   if: steps.git-changes.outputs.changed == 1 && steps.pull-request.outputs.pr_number > 0 && success()
  #   uses: sudo-bot/action-pull-request-merge@v1.1.1
  #   with:
  #       github-token: ${{ secrets.GITHUB_TOKEN }}
  #       number: ${{ steps.pull-request.outputs.pr_number }}
  # - run: npm publish --access public
  #   if: steps.git-changes.outputs.changed == 1 && success()
  #   env:
  #     NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

  # - name: NCU Install
  #   run: npm install -g npm-check-updates
  #   if: inputs.type == 'npm'
  # - name: NCU Check
  #   run: ncu -u
  #   if: inputs.type == 'npm'
  # - name: Commit changes
  #   if: inputs.type == 'npm' && ${{ success() }}
  #   run: |
  #     git config --global user.name '${{ github.repository_owner }}'
  #     git config --global user.email '${{ github.repository_owner }}@users.noreply.github.com'
  #     git add .
  #     git commit -m "npm updates"
  #     git push
  # - uses: repo-sync/pull-request@v2
  #   with:
  #     source_branch: dev
  #     destination_branch: master
  #     github_token: ${{ secrets.GITHUB_TOKEN }}
  # - name: Pull Request Output
  #   run: |
  #     echo ${{ steps.cpr.outputs.pr_url }}
  #     echo ${{ steps.cpr.outputs.pr_number }}
